local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
print("Rayfield loaded successfully")

local Window = Rayfield:CreateWindow({
    Name = "Rayfield Example Window",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    }
})

local MainTab = Window:CreateTab("AutoFarm", 4483362458)
local Section = MainTab:CreateSection("AutoHatch")

local goldenEggEnabled = false
local diamondEggEnabled = false
local crackedEggEnabled = false

local goldenEggIndex = nil

-- Golden Spotted Egg Toggle (Modified)
MainTab:CreateToggle({
    Name = "Auto Hatch Golden Spotted Egg",
    CurrentValue = false,
    Flag = "GoldenEggToggle",
    Callback = function(Value)
        goldenEggEnabled = Value
        coroutine.wrap(function()
            while goldenEggEnabled do
                local args = {
                    [1] = "Golden Spotted Egg",
                    [2] = false,
                    [3] = true
                }

                local children = game:GetService("ReplicatedStorage"):GetChildren()
                local success = false

                if goldenEggIndex then
                    success = pcall(function()
                        children[goldenEggIndex]:InvokeServer(unpack(args))
                    end)
                    if success then
                        print("Used saved remote index:", goldenEggIndex)
                    else
                        print("Saved remote index failed:", goldenEggIndex)
                        goldenEggIndex = nil
                    end
                end

                if not goldenEggIndex then
                    for i = 1, math.min(1000, #children) do
                        success = pcall(function()
                            children[i]:InvokeServer(unpack(args))
                        end)
                        if success then
                            goldenEggIndex = i
                            print("Found working remote index:", goldenEggIndex)
                            break
                        end
                    end
                end

                task.wait()
            end
        end)()
    end,
})
