-- Load necessary libraries and initialize Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Rayfield Example Window",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, -- Custom folder for hub/game
        FileName = "Big Hub"
    }
})
local MainTab = Window:CreateTab("Tab Example", 4483362458) -- Tab Title and Image
local Section = MainTab:CreateSection("Section Example")

-- Variables for toggles
local isRunning, isJumping, isCheckingZone = false, false, false
local player = game:GetService("Players").LocalPlayer
local petScore = player:WaitForChild("CurrentPetScore")
local shinyScore = player:WaitForChild("ShinyScore")

-- Zone determination based on score and shiny level
local function getZoneNumber(score, shinyLevel)
    if score >= 210 and shinyLevel >= 100 then return 8
    elseif score > 175 then return 6
    elseif score > 120 then return 5
    elseif score > 75 then return 4
    elseif score > 40 then return 3
    elseif score > 15 then return 2
    else return 1 end
end

-- Auto Zone Check toggle
local ToggleZoneCheck = MainTab:CreateToggle({
    Name = "Auto Zone Check",
    CurrentValue = false,
    Flag = "ToggleZoneCheck",
    Callback = function(Value)
        isCheckingZone = Value
        if Value then
            coroutine.wrap(function()
                while isCheckingZone do
                    local zoneNumber = getZoneNumber(petScore.Value, shinyScore.Value)
                    if zoneNumber == 8 then break end
                    game:GetService("ReplicatedStorage").Remotes.OnAreaButton:FireServer(zoneNumber)
                    wait(1)
                end
            end)()
        end
    end,
})

-- Auto Fuse toggle
MainTab:CreateToggle({
    Name = "Auto Fuse",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        isRunning = Value
        if Value then
            coroutine.wrap(function()
                while isRunning do
                    game:GetService("ReplicatedStorage").Remotes.AutoFuse:FireServer({true, true, true, true, true, true, true, true})
                    wait(1)
                end
            end)()
        end
    end,
})

-- Auto Jump toggle
MainTab:CreateToggle({
    Name = "Auto Jump",
    CurrentValue = false,
    Flag = "Toggle2",
    Callback = function(Value)
        isJumping = Value
        if Value then
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:WaitForChild("Humanoid")
            coroutine.wrap(function()
                while isJumping do
                    humanoid.Jump = true
                    wait(0.1)
                end
            end)()
        end
    end,
})
-- Button for Script 1
MainTab:CreateButton({
    Name = "Script 1",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/AliCode14/scripts/main/ScriptHub.lua'))()
    end,
})

-- Anti-AFK Button
MainTab:CreateButton({
    Name = "Anti-AFK",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/abbxie/Scripts/refs/heads/main/Antiafk"))()
    end,
})

-- Button for Script 2
MainTab:CreateButton({
    Name = "Script 2",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/CasperFlyModz/discord.gg-rips/main/CollectAllPets.lua"))()
    end,
})

-- Equip Best Button
MainTab:CreateButton({
    Name = "Equip Best",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.EquipBest:FireServer()
    end,
})

-- Remote Spy Button
MainTab:CreateButton({
    Name = "Remote Spy",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/exxtremestuffs/SimpleSpySource/raw/master/SimpleSpy.lua"))()
    end,
})

-- Remove Animations Button
MainTab:CreateButton({
    Name = "Remove Animations",
    Callback = function()
        local rs, lighting, player, starterGui = game:GetService("ReplicatedStorage"), game:GetService("Lighting"), player, game:GetService("StarterGui")

        -- Move various GUI elements to ReplicatedStorage to disable
        local elementsToMove = {
            lighting:FindFirstChild("Blur"),
            player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("ScreenGui") and player.PlayerGui.ScreenGui:FindFirstChild("Hatcher"),
            player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("ScreenGui") and player.PlayerGui.ScreenGui:FindFirstChild("AutoFuse"),
            starterGui:FindFirstChild("ScreenGui") and starterGui.ScreenGui:FindFirstChild("AutoFuse"),
            player:FindFirstChild("AutoFuse"),
            player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("ScreenGui") and player.PlayerGui.ScreenGui.Main:FindFirstChild("AutoFuse"),
            player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("ScreenGui") and player.PlayerGui.ScreenGui.Main:FindFirstChild("Factory")
        }

        -- Move each element to ReplicatedStorage if it exists
        for _, element in ipairs(elementsToMove) do
            if element then element.Parent = rs end
        end
    end,
})
