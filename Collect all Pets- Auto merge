local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   }
})

local MainTab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image
local Section = MainTab:CreateSection("Section Example")

-- Variables for the first toggle (Auto Fuse)
local isRunning = false -- Variable to track if the loop should run for the first toggle

local Toggle1 = MainTab:CreateToggle({
   Name = "Toggle Example (Auto Fuse)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file
   Callback = function(Value)
      isRunning = Value -- Update the isRunning variable based on the toggle state
      
      if Value then
         -- Start the loop in a coroutine when the toggle is turned on
         coroutine.wrap(function()
            while isRunning do
               -- Define the args table
               local args = {
                   [1] = {
                       [1] = true,
                       [2] = true,
                       [3] = true,
                       [4] = true,
                       [5] = true,
                       [6] = true,
                       [7] = true,
                       [8] = false
                   }
               }

               -- Fire the server event with the args
               game:GetService("ReplicatedStorage").Remotes.AutoFuse:FireServer(unpack(args))

               wait(1) -- Adjust the wait time as needed
            end
         end)() -- Start the coroutine
      end
   end,
})

-- Variables for the second toggle (Auto Jump)
local isJumping = false -- Variable to track if the auto-jump loop should run

local Toggle2 = MainTab:CreateToggle({
   Name = "Toggle Example (Auto Jump)",
   CurrentValue = false,
   Flag = "Toggle2", -- A flag is the identifier for the configuration file
   Callback = function(Value)
      isJumping = Value -- Update the isJumping variable based on the toggle state
      
      if Value then
         -- Get the player's character and humanoid
         local player = game.Players.LocalPlayer
         local character = player.Character or player.CharacterAdded:Wait()
         local humanoid = character:WaitForChild("Humanoid")

         -- Start the auto-jump loop in a coroutine
         coroutine.wrap(function()
            while isJumping do
               humanoid.Jump = true
               wait(0.1) -- Add a slight delay to avoid spam jumping too fast
            end
         end)() -- Start the coroutine
      end
   end,
})
local Button1 = MainTab:CreateButton({
   Name = "Run CollectAllPets Script",
   Callback = function()
         loadstring(game:HttpGet('https://raw.githubusercontent.com/AliCode14/scripts/main/ScriptHub.lua'))()
   end,
})
local Button2 = MainTab:CreateButton({
   Name = "Auntiafk",
   Callback = function()
         loadstring(game:HttpGet("https://raw.githubusercontent.com/abbxie/Scripts/refs/heads/main/Antiafk"))()
   end,
})
local Button3 = MainTab:CreateButton({
   Name = "Run CollectAllPets Script2",
   Callback = function()
         loadstring(game:HttpGet("https://raw.githubusercontent.com/CasperFlyModz/discord.gg-rips/main/CollectAllPets.lua"))()
   end,
})
