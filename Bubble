-- Load Rayfield library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
print("Rayfield loaded successfully")

-- Create the Rayfield window
local Window = Rayfield:CreateWindow({
    Name = "Rayfield Example Window",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, -- Specify a folder name if needed
        FileName = "Big Hub"
    }
})

-- Create the main frame for the GUI
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0.4, 0, 0.6, 0)
mainFrame.Position = UDim2.new(0.3, 0, 0.2, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BackgroundTransparency = 0.5
mainFrame.Parent = game.Players.LocalPlayer.PlayerGui

-- Create a header frame
local headerFrame = Instance.new("Frame")
headerFrame.Size = UDim2.new(1, 0, 0, 30)
headerFrame.Position = UDim2.new(0, 0, 0, 0)
headerFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
headerFrame.Parent = mainFrame

-- Create the header text
local header = Instance.new("TextLabel")
header.Text = "Header Text Here"
header.TextColor3 = Color3.fromRGB(255, 255, 255)
header.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
header.Size = UDim2.new(1, 0, 1, 0)
header.Parent = headerFrame

-- Create a scrollable frame for the content
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, 0, 1, 0)
scrollFrame.Position = UDim2.new(0, 0, 0, headerFrame.Size.Y.Offset)
scrollFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
scrollFrame.BackgroundTransparency = 1
scrollFrame.Parent = mainFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)
UIListLayout.Parent = scrollFrame

-- Create drag functionality for the header
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

headerFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if dragging then
                update(input)
            end
        end)
    end
end)

headerFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Toggle listener
local listenerActive = false
local clickConnection
local screenGui

local function getObjectPath(obj)
    local path = ""
    local baseObject = game.Workspace

    while obj do
        if obj.Parent and obj.Parent.Name == "Ugc" then
            obj = obj.Parent.Parent
        else
            if string.match(obj.Name, "%s") or string.match(obj.Name, "%W") then
                path = string.format('["%s"]', obj.Name) .. path
            else
                path = obj.Name .. "." .. path
            end
            obj = obj.Parent
        end
    end

    if path:sub(1, 1) ~= "Workspace" then
        path = "Workspace." .. path
    end

    if path:sub(-1) == "." then
        path = path:sub(1, -2)
    end

    return path
end

local function displayObjectPath(path)
    local textBox = Instance.new("TextBox")
    textBox.Text = path
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    textBox.BackgroundTransparency = 0.8
    textBox.Size = UDim2.new(1, 0, 0, 30)
    textBox.TextWrapped = true
    textBox.TextScaled = true
    textBox.ClearTextOnFocus = false
    textBox.MultiLine = true
    textBox.Parent = scrollFrame

    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, scrollFrame.CanvasSize.Y.Offset + textBox.Size.Y.Offset + 5)
end

local function createScrollGUI()
    local player = game.Players.LocalPlayer
    screenGui = Instance.new("ScreenGui")
    screenGui.Parent = player.PlayerGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.4, 0, 0.6, 0)
    frame.Position = UDim2.new(0.3, 0, 0.2, 0)
    frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    frame.BackgroundTransparency = 0.5
    frame.Parent = screenGui

    scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, 0, 1, 0)
    scrollFrame.Position = UDim2.new(0, 0, 0, 30)
    scrollFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.Parent = frame

    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)
    UIListLayout.Parent = scrollFrame
end

local function listenForClicks()
    clickConnection = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
        if input.UserInputType == Enum.UserInputType.MouseButton1 and not gameProcessed then
            local mouse = game.Players.LocalPlayer:GetMouse()
            local clickedObject = mouse.Target

            if clickedObject then
                local objectPath = getObjectPath(clickedObject)
                displayObjectPath(objectPath)
            end
        end
    end)
end

-- Toggle for Listener using the Sirius library
local Toggle = Rayfield:CreateToggle({
    Name = "Toggle Listener",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag for the configuration file
    Callback = function(Value)
        listenerActive = Value

        if listenerActive then
            createScrollGUI()
            listenForClicks()
            print("Listener started.")
        else
            if clickConnection then
                clickConnection:Disconnect()
                clickConnection = nil
            end
            listenerActive = false
            if screenGui then
                screenGui:Destroy()
            end
            print("Listener stopped and GUI closed.")
        end
    end,
})

-- Render the GUI
Rayfield:Render()
